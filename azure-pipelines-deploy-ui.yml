# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

resources:
  pipelines:
  - pipeline: UIBuildPipeline
    source: 'P2_TheTofuWarriors Build Angular UI'
    trigger: true

variables:
  - group: Azure-angular-p2-deploy
  - name: pathToStagePackage
    value: "$(Build.ArtifactStagingDirectory)"
  - name: pathToPackageFiles
    value: "$(pathToStagePackage)/tofu-warriors-ui"
  - name: pathToAngularProject
    value: "tofu-warriors-ui"

pool:
  vmImage: windows-latest

steps:
- task: DownloadSecureFile@1
  name: PubXML
  displayName: 'Download .pubxml for Deployment'
  inputs:
    secureFile: 'Project1-StoreApplication-P2.pubxml'

- task: DownloadPipelineArtifact@2
  inputs:
    source: specific
    project: 'revature-JonB'
    pipeline: $(resources.pipeline.UIBuildPipeline.pipelineID)
    artifact: AngularBuild
    runVersion: latest
    path: "$(pathToAngularProject)/dist"

#- task: AzureStaticWebApp@0
#  inputs:
#    app_location: '$(pathToAngularProject)'
#    api_location: 'api'
#    output_location: 'dist/tofu-warriors-ui'
#    azure_static_web_apps_api_token: $(angular_deploy_token)


- task: AzureStaticWebApp@0
  inputs:
    app_location: "$(pathToAngularProject)"
    api_location: "api"
    output_location: "wwwroot"
  env:
    azure_static_web_apps_api_token: $(angular_deploy_token)



#- task: FtpUpload@2
#  inputs:
#    credentialsOption: 'inputs'
#    serverUrl: '$(angular_server_url)'
#    username: '$(angular_server_ftp_username)'
#    password: '$(angular_server_ftp_password)'
#    rootDirectory: '$(pathToPackageFiles)'
#    filePatterns: '**'
#    remoteDirectory: '/site/wwwroot'
#    clean: false
#    cleanContents: true
#    preservePaths: false
#    trustSSL: false
