
--use master;
--go

--CREATE DATABASE TheTofuWarriorsDB;
--go

use TheTofuWarriorsDB;
go


DROP TABLE IF EXISTS App.Comment;
go
DROP TABLE IF EXISTS App.Rating;
go
DROP TABLE IF EXISTS App.UserRecipe;
go
DROP TABLE IF EXISTS App.RecipeIngredient;
go
DROP TABLE IF EXISTS App.Ingredient;
go
DROP TABLE IF EXISTS App.MeasureUnit;
go
DROP TABLE IF EXISTS App.RecipeTag;
go
DROP TABLE IF EXISTS App.Tag;
go
DROP TABLE IF EXISTS App.[Following];
go
DROP TABLE IF EXISTS App.Recipe;
go
DROP TABLE IF EXISTS App.[User];
go

DROP SCHEMA IF EXISTS App;
go

CREATE SCHEMA App;
go

CREATE TABLE App.MeasureUnit (
	MeasureUnitID INTEGER NOT NULL IDENTITY(1,1) CONSTRAINT PK_MeasureUnit PRIMARY KEY (MeasureUnitID)
	,Unit NVARCHAR(100) NOT NULL CONSTRAINT UNQ_MeasureUnit_Name UNIQUE (Unit)
	,[Description] NVARCHAR(100)
);

CREATE TABLE App.[User] (
	UserID INTEGER NOT NULL IDENTITY(1,1) CONSTRAINT PK_User PRIMARY KEY (UserID)
	,FirstName NVARCHAR(100) NOT NULL
	,LastName NVARCHAR(100) NOT NULL
	,Email NVARCHAR(100) NOT NULL CONSTRAINT UNQ_User_Email UNIQUE (Email)
	,Username NVARCHAR(100) NOT NULL CONSTRAINT UNQ_User_Username UNIQUE (Username)
	,[Password] NVARCHAR(100) NOT NULL
);

CREATE TABLE App.Recipe (
	RecipeID INTEGER NOT NULL IDENTITY(1,1) CONSTRAINT PK_Recipe PRIMARY KEY (RecipeID)
	,CreatorUserID INTEGER NOT NULL CONSTRAINT FK_Recipe_User FOREIGN KEY (CreatorUserID) REFERENCES App.[User]
	,[Name] NVARCHAR(100) NOT NULL
	,Instructions NVARCHAR(MAX)
	,CreationTime DATETIME2 NOT NULL
);

CREATE TABLE App.UserRecipe (
	UserRecipeID INTEGER NOT NULL IDENTITY(1,1) CONSTRAINT PK_UserRecipe PRIMARY KEY (UserRecipeID)
	,UserID INTEGER NOT NULL CONSTRAINT FK_UserRecipe_User FOREIGN KEY (UserID) REFERENCES App.[User]
	,RecipeID INTEGER NULL CONSTRAINT FK_UserRecipe_Recipe FOREIGN KEY (RecipeID) REFERENCES App.Recipe
	,ApiRecipeKey INTEGER NULL
);

CREATE TABLE App.Rating (
	RatingID INTEGER NOT NULL IDENTITY(1,1) CONSTRAINT PK_Rating PRIMARY KEY (RatingID)
	,UserID INTEGER NOT NULL CONSTRAINT FK_Rating_User FOREIGN KEY (UserID) REFERENCES App.[User]
	,RecipeID INTEGER NOT NULL CONSTRAINT FK_Rating_Recipe FOREIGN KEY (RecipeID) REFERENCES App.Recipe
	,Score TINYINT NOT NULL
	,CONSTRAINT UNQ_Rating_UserID_RecipeID UNIQUE (UserID, RecipeID)
);

CREATE TABLE App.Ingredient (
	IngredientID INTEGER NOT NULL IDENTITY(1,1) CONSTRAINT PK_Ingredient PRIMARY KEY (IngredientID)
	,[Name] NVARCHAR(100) NOT NULL CONSTRAINT UNQ_Ingredient_Name UNIQUE ([Name])
	,[Description] NVARCHAR(100)
);

CREATE TABLE App.RecipeIngredient (
	RecipeIngredientID INTEGER NOT NULL IDENTITY(1,1) CONSTRAINT PK_RecipeIngredient PRIMARY KEY (RecipeIngredientID)
	,RecipeID INTEGER NOT NULL CONSTRAINT FK_RecipeIngredient_Recipe FOREIGN KEY (RecipeID) REFERENCES App.Recipe
	,IngredientID INTEGER NOT NULL CONSTRAINT FK_RecipeIngredient_Ingredient FOREIGN KEY (IngredientID) REFERENCES App.Ingredient
	,Quantity INTEGER NOT NULL
	,MeasureUnitID INTEGER NOT NULL CONSTRAINT FK_RecipeIngredient_MeasureUnit FOREIGN KEY (MeasureUnitID) REFERENCES App.MeasureUnit
);

CREATE TABLE App.Tag (
	TagID INTEGER NOT NULL IDENTITY(1,1) CONSTRAINT PK_Tag PRIMARY KEY (TagID)
	,[Name] NVARCHAR(100) NOT NULL
	,TagType SMALLINT
);

CREATE TABLE App.RecipeTag (
	RecipeTagID INTEGER NOT NULL IDENTITY(1,1) CONSTRAINT PK_RecipeTag PRIMARY KEY (RecipeTagID)
	,TagID INTEGER NOT NULL CONSTRAINT FK_RecipeTag_Tag FOREIGN KEY (TagID) REFERENCES App.Tag
	,RecipeID INTEGER NOT NULL CONSTRAINT FK_RecipeTag_Recipe FOREIGN KEY (RecipeID) REFERENCES App.Recipe
	,CONSTRAINT UNQ_RecipeTag_TagID_RecipeID UNIQUE (TagID, RecipeID)
);

CREATE TABLE App.Comment (
	CommentID INTEGER NOT NULL IDENTITY(1,1) CONSTRAINT PK_Comment PRIMARY KEY (CommentID)
	,UserID INTEGER NOT NULL CONSTRAINT FK_Comment_User FOREIGN KEY (UserID) REFERENCES App.[User]
	,RecipeID INTEGER NOT NULL CONSTRAINT FK_Comment_Recipe FOREIGN KEY (RecipeID) REFERENCES App.Recipe
	,CommentText NVARCHAR(500) NOT NULL
	,CommentTime DATETIME2 NOT NULL
	,PrevCommentID INTEGER NULL CONSTRAINT FK_Comment_Comment FOREIGN KEY (PrevCommentID) REFERENCES App.Comment
);

CREATE TABLE App.[Following] (
	FollowingID INTEGER NOT NULL IDENTITY(1,1) CONSTRAINT PK_Following PRIMARY KEY (FollowingID)
	,FollowerID INTEGER NOT NULL CONSTRAINT FK_Following_FollowerUser FOREIGN KEY (FollowerID) REFERENCES App.[User]
	,InfluencerID INTEGER NOT NULL CONSTRAINT FK_Following_InfluencerUser FOREIGN KEY (InfluencerID) REFERENCES App.[User]
	,CONSTRAINT UNQ_Following_FollowerID_InfluencerID UNIQUE (FollowerID, InfluencerID)
);
